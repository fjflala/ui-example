{"version":3,"file":"static/iframe.f57ecd83a40233d9c801.bundle.js","sources":["webpack:///./src/Button/index.js"],"sourcesContent":["/**\n *  Module dependencies\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n/**\n * Helpers\n */\nconst safeProps = [\n  'disabled',\n  'name',\n  'type',\n  'onClick',\n  'className',\n];\nconst nameSpace = 'ui-button'\n\n/**\n *  Ui Button\n */\nclass Button extends PureComponent {\n  static propTypes = {\n    disabled: PropTypes.bool,\n    name: PropTypes.string,\n    type: PropTypes.oneOf(['submit', 'reset', 'button']),\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n    modifier: PropTypes.oneOf(['primary', 'secondary', 'tertiary']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n  }\n\n  static defaultProps = {\n    disabled: false,\n    name: '',\n    type: 'button',\n    onClick: () => {},\n    className: '',\n    modifier: 'primary',\n    size: 'medium',\n  }\n\n  /**\n   * getSafeProps method\n   * Will return the safe props for button element\n   * @returns {Object} - The props\n   */\n  getSafeProps = () => {\n    const props = {};\n    Object.keys(this.props).map((key) => {\n      if (safeProps.includes(key)) {\n        props[key] = this.props[key];\n      }\n\n      return;\n    });\n\n    return props;\n  }\n\n  render() {\n    const {\n      children,\n      modifier,\n      disabled\n    } = this.props;\n\n    const props = this.getSafeProps();\n\n    const className = classnames(\n      nameSpace, \n      `${nameSpace}--${modifier}`,\n      {\n        [`${nameSpace}--disabled`]: disabled,\n      },\n    );\n\n    return (\n      <button\n      {...props}\n      className={className}\n      >\n        {children}\n      </button>\n    );\n  }\n}\n\n/**\n *  Expose Component\n */\nexport default Button;\n"],"mappings":"AAUA","sourceRoot":""}